<Activity mc:Ignorable="sap sap2010" x:Class="getBillProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_cmitDirPath" Type="InArgument(x:String)" />
    <x:Property Name="out_billCycleDay" Type="OutArgument(x:String)" />
    <x:Property Name="out_billCaseArr" Type="OutArgument(s:String[])" />
    <x:Property Name="out_waiveCaseArr" Type="OutArgument(s:String[])" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>703,2639</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>getBillProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="getBillProcess" sap:VirtualizedContainerService.HintSize="713,2474" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="caseTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="billTable" />
      <Variable x:TypeArguments="x:String" Name="endBillStr" />
      <Variable x:TypeArguments="x:Boolean" Name="doWavie" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="in_cmitDirPath + &quot;list_case_routine.xlsx&quot;" AutoSave="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="671,390" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" MacroSetting="DisableAll" ReadOnly="True" Visible="False" WorkbookPath="list_case_routine.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,250" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[caseTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="A1:D5" SheetName="CASE" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[billTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="A1:E9" SheetName="BILLCYCLE" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[out_billCaseArr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="671,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[out_waiveCaseArr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim todayStr As String = &quot;28&quot;'Today.ToString(&quot;dd&quot;)&#xD;&#xA;Dim indexBillCycle As Integer = 0&#xD;&#xA;Dim indexBill1 As Integer = 1&#xD;&#xA;Dim indexBill2 As Integer = 2&#xD;&#xA;Dim indexBill3 As Integer = 3&#xD;&#xA;Dim indexWaive As Integer = 4&#xD;&#xA;out_doWaive = False&#xD;&#xA;&#xD;&#xA;For i As Integer = 0 To (in_billTable.Rows.Count - 1)&#xD;&#xA;    If (String.IsNullOrEmpty(out_endBillStr)) Then&#xD;&#xA;&#x9;&#x9;Console.WriteLine(in_billTable.Rows(i)(indexBill1).ToString() + &quot; : &quot; + in_billTable.Rows(i)(indexBill2).ToString() + &quot; : &quot; + in_billTable.Rows(i)(indexBill3).ToString())&#xD;&#xA;        If (in_billTable.Rows(i)(indexBill1).ToString() = todayStr) Then&#xD;&#xA;            out_endBillStr = &quot;ENDBILL_1&quot;&#xD;&#xA;        ElseIf (in_billTable.Rows(i)(indexBill2).ToString() = todayStr) Then&#xD;&#xA;            out_endBillStr = &quot;ENDBILL_2&quot;&#xD;&#xA;        ElseIf (in_billTable.Rows(i)(indexBill3).ToString() = todayStr) Then&#xD;&#xA;            out_endBillStr = &quot;ENDBILL_3&quot;&#xD;&#xA;        End If&#xD;&#xA;        If (String.IsNullOrEmpty(out_endBillStr) = False) Then&#xD;&#xA;            out_billCycleDay = in_billTable.Rows(i)(indexBillCycle).ToString()&#xD;&#xA;        End If&#xD;&#xA;    ElseIf (out_doWaive) Then&#xD;&#xA;        Exit For&#xD;&#xA;    End If&#xD;&#xA;&#xD;&#xA;&#x9;If (out_doWaive = False) Then&#xD;&#xA;        If (in_billTable.Rows(i)(indexWaive).ToString() = todayStr) Then&#xD;&#xA;            out_doWaive = True&#xD;&#xA;        End If&#xD;&#xA;    End If&#xD;&#xA;Next" DisplayName="Invoke Code (Check Bill Cycle, Waive)" sap:VirtualizedContainerService.HintSize="671,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_billTable">[billTable]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_endBillStr">[endBillStr]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_billCycleDay">[out_billCycleDay]</OutArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_doWaive">[doWavie]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="671,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;[Check Bill Cycle]&quot; + vbCrLf + &quot;endBillStr : &quot; + endBillStr + vbCrLf + &quot;out_billCycleDay : &quot; + out_billCycleDay + vbCrLf + &quot;doWaive : &quot; + (if(doWavie, &quot;T&quot;, &quot;F&quot;))]" />
    <If Condition="[String.IsNullOrEmpty(endBillStr)]" sap:VirtualizedContainerService.HintSize="671,1417" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="526,1269" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim index As Integer = 0&#xA;&#xA;For i As Integer = 0 To (in_caseTable.Rows.Count - 1)&#xA;&#x9;If (String.IsNullOrEmpty( in_caseTable.Rows(i)(in_endBillStr).ToString().Trim() )) Then&#xA;&#x9;&#x9;Exit For&#xA;&#x9;Else&#xA;&#x9;&#x9;ReDim Preserve out_billCaseArr(index)&#xA;&#x9;&#x9;out_billCaseArr(index) = in_caseTable.Rows(i)(in_endBillStr).ToString()&#xA;&#x9;&#x9;index = index + 1&#xA;&#x9;End If&#xA;Next" DisplayName="Invoke Code (Assign out_billCaseArr)" sap:VirtualizedContainerService.HintSize="484,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_caseTable">[caseTable]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_endBillStr">[endBillStr]</InArgument>
              <OutArgument x:TypeArguments="s:String[]" x:Key="out_billCaseArr">[out_billCaseArr]</OutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <If Condition="[doWavie]" sap:VirtualizedContainerService.HintSize="484,312" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim index As Integer = 0&#xA;Dim waiveColName As String = &quot;WAIVE&quot;&#xA;&#xA;For i As Integer = 0 To (in_caseTable.Rows.Count - 1)&#xA;&#x9;If (String.IsNullOrEmpty( in_caseTable.Rows(i)(waiveColName).ToString().Trim() )) Then&#xA;&#x9;&#x9;Exit For&#xA;&#x9;Else&#xA;&#x9;&#x9;ReDim Preserve out_waiveCaseArr(index)&#xA;&#x9;&#x9;out_waiveCaseArr(index) = in_caseTable.Rows(i)(waiveColName).ToString()&#xA;&#x9;&#x9;index = index + 1&#xA;&#x9;End If&#xA;Next" DisplayName="Invoke Code (Assign out_waiveCaseArr)" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_caseTable">[caseTable]</InArgument>
                  <OutArgument x:TypeArguments="s:String[]" x:Key="out_waiveCaseArr">[out_waiveCaseArr]</OutArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </If.Then>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;[getBillProcess Return]&quot; + vbCrlf +&#xA;&quot;out_billCycleDay : &quot; + out_billCycleDay]" />
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each (Display BillCase Log)" sap:VirtualizedContainerService.HintSize="484,225" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[out_billCaseArr]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;out_billCaseArr[] : &quot; + item]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each (Display Waive Log)" sap:VirtualizedContainerService.HintSize="484,225" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[out_waiveCaseArr]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;out_waiveCaseArr[] : &quot; + item]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>